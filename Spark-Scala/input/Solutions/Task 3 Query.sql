CREATE OR REPLACE PACKAGE BODY LOAD_CLICKLOG AS
/*
Author		Version		Date			Description
Kent M.		1.0			28-Aug-2017 	Assuming that input files identical to the provided one are transferred to the file system at /uploads/clicklog_yyyy-mm-dd/, 
										a procedure will upsert the records to our target table. 
										Furthermore, it is assumed that data has been cleaned in the stage table. The fields User_Id, Time & Action will be the primary key. The stage table is STG_CLICKLOG. 						
*/

PROCEDURE LOAD_TEN_MOST_SEARCHED_DEST IS
	BEGIN	
	/*
	This query will insert the ten most searched destinations for each 10 minute interval since 00:00:00 to the target table.
	*/		
	INSERT INTO TEN_MOST_SEARCHED_DEST	
	SELECT TRUNC(SYSDATE), T3.MIN_INTERVAL, T3.DESTINATION 
	FROM
	  (SELECT T2.MIN_INTERVAL, T2.DESTINATION, ROW_NUMBER() OVER (PARTITION BY T2.MIN_INTERVAL ORDER BY T2.MIN_INTERVAL ASC, T2.DEST_COUNT DESC) AS TOP_DEST_ORDER
	  FROM
		(SELECT T1.MIN_INTERVAL, T1.DESTINATION, COUNT(T1.DESTINATION) DEST_COUNT
		FROM
		  (SELECT TIME, DESTINATION, (FLOOR ( ( EXTRACT(HOUR FROM TIME) * 60 + EXTRACT(MINUTE FROM TIME) ) / 10) * 10) || '-' || ((FLOOR ( ( EXTRACT(HOUR FROM TIME) * 60 + EXTRACT(MINUTE FROM TIME) ) / 10) * 10) + 9) AS MIN_INTERVAL
		  FROM CLICKLOG
		  WHERE ACTION = 'Search') T1
		GROUP BY T1.MIN_INTERVAL, T1.DESTINATION) T2) T3
	WHERE T3.TOP_DEST_ORDER <= 10 
	ORDER BY T3.MIN_INTERVAL, T3.TOP_DEST_ORDER;
	
	COMMIT;
	
	END LOAD_TEN_MOST_SEARCHED_DEST;
	
PROCEDURE LOAD_SECOND_CLICKED_HOTEL IS
	BEGIN
	/*
	Insert Query for each user returning the second distinct hotel that they clicked on, or null if the user did not click on two distinct hotels.
	*/
	INSERT INTO SECOND_CLICKED_HOTEL
	SELECT TRUNC(SYSDATE), T2.USER_ID, MAX(CASE WHEN T2.RN = 2 THEN HOTEL ELSE NULL END) AS SECOND_DISTINCT_HOTEL_CLICKED
	FROM
	  (SELECT T1.USER_ID, T1.TIME, T1.HOTEL, ROW_NUMBER() OVER (PARTITION BY T1.USER_ID ORDER BY T1.TIME) RN 
	  FROM
		(SELECT USER_ID, HOTEL, MIN(TIME) TIME
		FROM CLICKLOG 
		WHERE ACTION = 'Click'
		GROUP BY USER_ID, HOTEL) T1) T2
	WHERE T2.RN <= 2
	GROUP BY T2.USER_ID
	ORDER BY T2.USER_ID;
	
	COMMIT;
	
	END LOAD_SECOND_CLICKED_HOTEL;

PROCEDURE LOAD_CLICKLOG_MERGE IS
	BEGIN
	/*
	This query will upsert Clicklog data from the stage table to the target table.
	*/
	MERGE INTO CLICKLOG TGT
	USING STG_CLICKLOG STG
	ON (TGT.USER_ID = STG.USER_ID AND TGT.TIME = STG.TIME AND TGT.ACTION = STG.ACTION)
		WHEN MATCHED
			THEN UPDATE SET TGT.DESTINATION = STG.DESTINATION, TGT.HOTEL = STG.HOTEL
		WHEN NOT MATCHED
			THEN INSERT (USER_ID, TIME, ACTION, DESTINATION, HOTEL) VALUES (STG.USER_ID, STG.TIME, STG.ACTION, STG.DESTINATION, STG.HOTEL);

	COMMIT;

	END LOAD_CLICKLOG_MERGE;
	
PROCEDURE CALL_PROCEDURE IS
	BEGIN
	/*
	Main procedure call.
	*/
	LOAD_CLICKLOG_MERGE;
	LOAD_TEN_MOST_SEARCHED_DEST;
	LOAD_SECOND_CLICKED_HOTEL;
	
	END CALL_PROCEDURE;

END LOAD_CLICKLOG;
/